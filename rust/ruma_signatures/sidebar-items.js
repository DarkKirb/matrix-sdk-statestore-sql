window.SIDEBAR_ITEMS = {"enum":[["Algorithm","The algorithm used for signing data."],["CanonicalJsonError","The set of possible errors when serializing to canonical JSON."],["CanonicalJsonValue","Represents a canonical JSON value as per the Matrix specification."],["Error","`ruma-signature`â€™s error type, wraps a number of other error types."],["JsonError","All errors related to JSON validation/parsing."],["JsonType","A JSON type enum for [`JsonError`] variants."],["ParseError","Errors relating to parsing of all sorts."],["VerificationError","Errors relating to verification of events and signatures."],["Verified","A value returned when an event is successfully verified."]],"fn":[["canonical_json","Converts an event into the canonical string form."],["content_hash","Creates a content hash for an event."],["hash_and_sign_event","Hashes and signs an event and adds the hash and signature to objects under the keys `hashes` and `signatures`, respectively."],["redact","Redacts an event using the rules specified in the Matrix client-server specification."],["redact_content_in_place","Redacts event content using the rules specified in the Matrix client-server specification."],["redact_in_place","Redacts an event using the rules specified in the Matrix client-server specification."],["reference_hash","Creates a reference hash for an event."],["sign_json","Signs an arbitrary JSON object and adds the signature to an object under the key `signatures`."],["verify_event","Verifies that the signed event contains all the required valid signatures."],["verify_json","Uses a set of public keys to verify a signed JSON object."]],"struct":[["Ed25519KeyPair","An Ed25519 key pair."],["Signature","A digital signature."]],"trait":[["KeyPair","A cryptographic key pair for digitally signing data."]],"type":[["CanonicalJsonObject","The inner type of `CanonicalJsonValue::Object`."],["PublicKeyMap","A map from entity names to sets of public keys for that entity."],["PublicKeySet","A set of public keys for a single homeserver."]]};