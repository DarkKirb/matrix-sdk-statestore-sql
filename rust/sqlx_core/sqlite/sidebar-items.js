window.SIDEBAR_ITEMS = {"enum":[["SqliteArgumentValue",""],["SqliteAutoVacuum",""],["SqliteJournalMode","Refer to SQLite documentation for the meaning of the database journaling mode."],["SqliteLockingMode","Refer to SQLite documentation for the meaning of the connection locking mode."],["SqliteSynchronous","Refer to SQLite documentation for the meaning of various synchronous settings."]],"mod":[["types","Conversions between Rust and SQLite types."]],"struct":[["LockedSqliteHandle",""],["Sqlite","Sqlite database driver."],["SqliteArguments",""],["SqliteColumn",""],["SqliteConnectOptions","Options and flags which can be used to configure a SQLite connection."],["SqliteConnection","A connection to an open [Sqlite] database."],["SqliteError",""],["SqliteQueryResult",""],["SqliteRow","Implementation of [`Row`] for SQLite."],["SqliteStatement",""],["SqliteTransactionManager","Implementation of [`TransactionManager`] for SQLite."],["SqliteTypeInfo","Type information for a SQLite type."],["SqliteValue",""],["SqliteValueRef",""]],"trait":[["SqliteExecutor","An alias for [`Executor<'_, Database = Sqlite>`][Executor]."]],"type":[["SqlitePool","An alias for [`Pool`][crate::pool::Pool], specialized for SQLite."],["SqlitePoolOptions","An alias for [`PoolOptions`][crate::pool::PoolOptions], specialized for SQLite."]]};